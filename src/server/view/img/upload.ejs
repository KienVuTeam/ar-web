<style>
  body {
    font-family: sans-serif;
    margin: 20px;
  }

  .delete-btn {
    position: absolute;
    top: 5px;
    right: 5px;
    background: red;
    color: #fff;
    border: none;
    border-radius: 50%;
    cursor: pointer;
    width: 22px;
    height: 22px;
    line-height: 18px;
    font-size: 14px;
  }

  .gallery-container {
    display: flex;
    gap: 20px;
    flex-wrap: wrap;
  }

  .gallery-container .col-left {
    flex: 2.5;
  }

  .gallery-container .col-right {
    border: 1px solid #ccc;
    padding: 20px;
    flex: 7.5;
  }

  .scroll-wrapper {
    text-align: center;
    height: 500px;
    overflow-y: auto;
    border: 1px solid #ccc;
    padding: 5px;
    border-radius: 5px;
  }

  .active-folder {
    font-weight: bold;
    color: blue;
  }

  /*  */
  #imageGallery {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    /* kho·∫£ng c√°ch gi·ªØa c√°c ·∫£nh */
    justify-content: center;
  }

  #imageGallery .item {
    min-width: calc(100% / 3 - 20px);
    /* K√≠ch th∆∞·ªõc c·ªë ƒë·ªãnh t·ªëi thi·ªÉu */
    flex: 1 1 180px;
    /* Cho ph√©p co gi√£n nh∆∞ng kh√¥ng nh·ªè h∆°n 200px  */
    height: 150px;
    border: 1px solid #ccc;
    border-radius: 5px;
    padding: 5px;
    position: relative;
    align-items: center;
  }

  #imageGallery .item img {
    max-width: 100%;
    height: calc(98%);
    object-fit: cover;
    border-radius: 5px;
  }
  .item .delete-btn {
    display: none; /* ·∫®n m·∫∑c ƒë·ªãnh */
  }

  .item:hover .delete-btn {
    display: block; /* Ch·ªâ hi·ªán khi hover */
  }
</style>

<h3>Image Explorer</h3>
<hr />
<div class="gallery-container">
  <div class="col-left">
    <h4>üìÇ Th∆∞ m·ª•c</h2>
      <ul id="folderList"></ul>
  </div>
  <div class="col-right">
    <div>
      <span style="font-size: 20px; font-weight: bold">Gallery</span>
      <button onclick="upload()">Upload</button>
    </div>

    <input type="file" id="fileInput" style="
        border: 1px dashed #000;
        padding: 40px 30%;
        border-radius: 10px;
        margin: 20px 0px;
        width: 100%;
      " />
    <img id="previewImage" src="#" alt="Preview" style="display: none; max-width: 300px; margin-top: 10px" />

    <div class="scroll-wrapper">
      <div id="imageGallery"></div>
    </div>
  </div>
</div>

<script>
  let currentFolder = null;

  // Preview ·∫£nh tr∆∞·ªõc khi upload
  document
    .getElementById("fileInput")
    .addEventListener("change", function (event) {
      const file = event.target.files[0];
      const preview = document.getElementById("previewImage");

      if (file && file.type.startsWith("image/")) {
        const reader = new FileReader();
        reader.onload = (e) => {
          preview.src = e.target.result;
          preview.style.display = "block";
        };
        reader.readAsDataURL(file);
      } else {
        preview.src = "#";
        preview.style.display = "none";
      }
    });

  // Load danh s√°ch th∆∞ m·ª•c
  function autoLoadFolder() {
    fetch("/admin/img/list-folder")
      .then((res) => res.json())
      .then((data) => {
        const folderList = document.getElementById("folderList");
        folderList.innerHTML = "";
        data.folders.forEach((folder) => {
          const li = document.createElement("li");
          li.textContent = folder;
          li.style.cursor = "pointer";
          li.onclick = () => {
            currentFolder = folder;
            [...folderList.children].forEach((el) =>
              el.classList.remove("active-folder"),
            );
            li.classList.add("active-folder");
            loadImages(folder);
          };
          folderList.appendChild(li);
        });
      });
  }

  // Load ·∫£nh trong folder
  function loadImages(folder) {
    fetch(`/admin/img/list-image/${folder}`)
      .then((res) => res.json())
      .then((data) => {
        const gallery = document.getElementById("imageGallery");
        gallery.innerHTML = "";
        data.images.forEach((img) => {
          const item = document.createElement("div");
          item.className = "item";

          const imgTag = document.createElement("img");
          imgTag.src = img.url;
          imgTag.alt = img.name;

          const delBtn = document.createElement("button");
          delBtn.className = "delete-btn";
          delBtn.innerHTML = "√ó";
          delBtn.onclick = () => del(img.name, folder);

          item.appendChild(imgTag);
          item.appendChild(delBtn);
          gallery.appendChild(item);
        });
      });
  }

  // Upload ·∫£nh v√†o folder ƒëang ch·ªçn
  async function upload() {
    if (!currentFolder) return alert("Vui l√≤ng ch·ªçn th∆∞ m·ª•c tr∆∞·ªõc khi upload!");
    const file = document.getElementById("fileInput").files[0];
    if (!file) return alert("Ch·ªçn file!");

    const form = new FormData();
    form.append("file", file);
    form.append("folder", currentFolder);

    await fetch("/admin/img/upload", { method: "POST", body: form });
    loadImages(currentFolder);
    document.getElementById("fileInput").value = "";
    document.getElementById("previewImage").style.display = "none";
  }

  // Xo√° ·∫£nh
  async function del(name, folder) {
    if (!confirm("B·∫°n c√≥ ch·∫Øc mu·ªën xo√° ·∫£nh n√†y?")) return;
    await fetch(`/admin/img/delete/${folder}/${name}`, { method: "DELETE" });
    loadImages(folder);
  }

  autoLoadFolder();
</script>
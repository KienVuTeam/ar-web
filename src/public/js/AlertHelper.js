// js
/**
 * =====================================
 * üì¶ Bootstrap Alert Helper
 * Author: KienVu (2025)
 * Description: Hi·ªÉn th·ªã alert Bootstrap t·ª± ƒë·ªông bi·∫øn m·∫•t sau th·ªùi gian ch·ªâ ƒë·ªãnh.
 * Dependencies: Bootstrap 5+ (bundle.js c√≥ s·∫µn component Alert)
 * =====================================
 *
 * ‚úÖ C√°ch s·ª≠ d·ª•ng:
 *
 * // Hi·ªÉn th·ªã alert th√†nh c√¥ng
 * AlertHelper.show('T·∫°o contest th√†nh c√¥ng!', 'success', 4000);
 *
 * // Hi·ªÉn th·ªã alert l·ªói
 * AlertHelper.show('C√≥ l·ªói x·∫£y ra khi l∆∞u d·ªØ li·ªáu', 'danger', 5000);
 *
 * // C√°c lo·∫°i alert h·ª£p l·ªá:
 *  - success (m√†u xanh)
 *  - danger  (m√†u ƒë·ªè)
 *  - warning (m√†u v√†ng)
 *  - info    (m√†u xanh nh·∫°t)
 *
 * Tham s·ªë:
 * @param {string} message  - N·ªôi dung th√¥ng b√°o.
 * @param {('success'|'danger'|'warning'|'info')} [type='success'] - Ki·ªÉu alert.
 * @param {number} [duration=3000] - Th·ªùi gian t·ªìn t·∫°i (ms) tr∆∞·ªõc khi t·ª± t·∫Øt.
 */

const AlertHelper = (() => {
  /**
   * ƒê·∫£m b·∫£o container alert t·ªìn t·∫°i trong DOM.
   * N·∫øu ch∆∞a c√≥, t·ª± t·∫°o ·ªü g√≥c ph·∫£i tr√™n m√†n h√¨nh.
   * @returns {HTMLElement} container - Ph·∫ßn t·ª≠ ch·ª©a alert.
   */
  function ensureContainer() {
    let container = document.getElementById('alert-container');
    if (!container) {
      container = document.createElement('div');
      container.id = 'alert-container';
      container.className = 'position-fixed top-0 end-0 p-3';
      container.style.zIndex = 1055;
      document.body.appendChild(container);
    }
    return container;
  }

  /**
   * Hi·ªÉn th·ªã m·ªôt alert bootstrap.
   * @param {string} message - N·ªôi dung th√¥ng b√°o.
   * @param {string} [type='success'] - Ki·ªÉu alert (success, danger, warning, info).
   * @param {number} [duration=3000] - Th·ªùi gian t·ª± ƒë·ªông ·∫©n (ms).
   */
  function show(message, type = 'success', duration = 3000) {
    const container = ensureContainer();
    const alertId = 'alert-' + Date.now();

    const alertHtml = `
      <div id="${alertId}" class="alert alert-${type} alert-dismissible fade show shadow-sm mb-2" role="alert">
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="close"></button>
      </div>
    `;

    container.insertAdjacentHTML('beforeend', alertHtml);

    setTimeout(() => {
      const alertEl = document.getElementById(alertId);
      if (alertEl) {
        const bsAlert = bootstrap.Alert.getOrCreateInstance(alertEl);
        bsAlert.close();
      }
    }, duration);
  }

  return { show };
})();

